@Bugs.ini@
@Hero.ini@
@Soldier.ini@

[Walls] ;=====================================
ChildList            = LeftWall#RightWall#Ceiling#Floor
 
[WallGraphic] ;===============================
Texture              = wall.png
Pivot                = center

[VerticalWallGraphic@WallGraphic] ;===========
Repeat               = (1, 13, 1)            ; This tiles the graphic 13 times on the Y axis.
 
[HorizontalWallGraphic@WallGraphic] ;=========
Repeat               = (22, 1, 1)            ; This tiles the graphic 22 times on the X axis.



[FullBoxPart] ;===============================
Type                 = box                   ; This defines the bounding type of the object
Restitution          = 0.0                   ; This defines the 'bounciness' of the object
Friction             = 1.0
SelfFlags            = 0x0001                ; This is essentially the ID of the collection of physics objects.
CheckMask            = 0xFFFF                ; This defines what OTHER ID Flags this will collide with.
Solid                = true
Density              = 1.0
; TopLeft            = (0.0, 0.0, 0.0)       ; Because we don't specify these values, they will be automatically created
; BottomRight        = (1.0, 1.0, 1.0)       ;    based upon the object that references it.

[WallBody] ;==================================
PartList             = FullBoxPart

[WallTemplate] ;==============================
Body                 = WallBody

[VerticalWall@WallTemplate] ;=================
Graphic              = VerticalWallGraphic
Scale                = @VerticalWallGraphic.Repeat ; The @<something>.Repeat causes the extra graphics we specified earlier to spawn nearby based upon the repeat value.
                                                   ; Essentially, you get a line of boxes instead of many spawned on the same spot.
 
[HorizontalWall@WallTemplate] ;===============
Graphic              = HorizontalWallGraphic
Scale                = @HorizontalWallGraphic.Repeat ; Don't forget the @ symbol, you'll get strange errors if you do! :)

[LeftWall@VerticalWall] ;=====================
Position             = (-304.0, 0.0, 0.0)    ; -320 (half the screen width) + 16 (half the wall graphic size) = -304
 
[RightWall@VerticalWall] ;====================
Position             = (304.0, 0.0, 0.0)     ; 320 - 16 = 304... I think you get the idea
 
[Ceiling@HorizontalWall] ;====================
Position             = (0.0, -224.0, 0.0)
 
[Floor@HorizontalWall] ;======================
Position             = (0.0, 224.0, 0.0)